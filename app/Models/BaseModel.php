<?php

namespace App\Models;

use App\HelperClasses\MyApp;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\SoftDeletes;
use OwenIt\Auditing\Contracts\Auditable;

abstract class BaseModel extends BaseGeneralModel implements Auditable
{
    use SoftDeletes;
    use \OwenIt\Auditing\Auditable;

    /**
     * @description add validation in frontend
     * @return mixed
     */
    public abstract function viewFieldsValidationFrontEnd(): mixed;

    /**
     * @description add validation in backend
     * @return mixed
     */
    public abstract function validationBackEnd(): mixed;

    /**
     * get all routes model
     * @return mixed
     */
    public abstract function getRoutes(): mixed;

    /**
     * @author moner khalil
     */
    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        self::creating(function ($model) {
            $user = MyApp::Classes()->getUser();
            if (!is_null($user)) {
                $model->created_by = $user->id;
            }
        });
        self::updating(function ($model) {
            $user = MyApp::Classes()->getUser();
            if (!is_null($user)) {
                $model->updated_by = $user->id;
            }
        });
    }

    public function userCreatedBy(): BelongsTo
    {
        return $this->belongsTo(User::class, "created_by", "id");
    }

    public function userUpdatedBy(): BelongsTo
    {
        return $this->belongsTo(User::class, "updated_by", "id");
    }

    /**
     * this function will map in the each routes that defined in the model,
     * and fetch each endpoint with resources function that we register.
     *
     * @param $route
     * @return array
     * @author moner khalil
     */
    public function resolveRoutes($route): array{
        $defaultConfig = MyApp::Classes()->routesALLCrud();

        $result = [];

        foreach ($defaultConfig as $key => $functions) {
            $result[$key] = "{$route}.$key";
        }

        return $result;
    }
}
